{"ast":null,"code":"var _jsxFileName = \"/Users/patrickliang/Desktop/Development/code/rails-react-devise/client/src/components/NewPost.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\n\nvar NewPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewPost, _Component);\n\n  function NewPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      content: ''\n    };\n\n    _this.handleChange = function (e) {\n      var newValue = e.target.value;\n      var key = e.target.name;\n\n      _this.setState(_defineProperty({}, key, newValue));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var data = {\n        post: _this.state\n      };\n      var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n      fetch('api/v1/posts', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-CSRF-Token': token\n        },\n        redirect: \"error\",\n        body: JSON.stringify(_this.state)\n      }).then(function (resp) {\n        resp.json();\n      }).then(function (post) {\n        _this.props.history.push('/');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewPost, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Title: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Content: \"), React.createElement(\"textarea\", {\n        name: \"content\",\n        id: \"\",\n        cols: \"30\",\n        rows: \"10\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Create Post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NewPost;\n}(Component);\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/patrickliang/Desktop/Development/code/rails-react-devise/client/src/components/NewPost.jsx"],"names":["React","Component","NewPost","state","title","content","handleChange","e","newValue","target","value","key","name","setState","handleSubmit","preventDefault","data","post","token","document","querySelector","fetch","method","headers","redirect","body","JSON","stringify","then","resp","json","props","history","push","bind"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA+C,OAA/C;;IAEMC,O;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,K;;UAKRC,Y,GAAe,UAAAC,CAAC,EAAI;AAClB,UAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;AACA,UAAIC,GAAG,GAAGJ,CAAC,CAACE,MAAF,CAASG,IAAnB;;AACA,YAAKC,QAAL,qBACGF,GADH,EACSH,QADT;AAGD,K;;UAEDM,Y,GAAe,UAACP,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACQ,cAAF;AACA,UAAIC,IAAI,GAAG;AAACC,QAAAA,IAAI,EAAE,MAAKd;AAAZ,OAAX;AACA,UAAIe,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,EAAkDf,OAA9D;AACAgB,MAAAA,KAAK,CAAC,cAAD,EAAiB;AACpBC,QAAAA,MAAM,EAAE,MADY;AAEpBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,8BAAoB,gBAFb;AAGP,0BAAgBL;AAHT,SAFW;AAOpBM,QAAAA,QAAQ,EAAE,OAPU;AAQpBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,MAAKxB,KAApB;AARc,OAAjB,CAAL,CAUGyB,IAVH,CAUQ,UAAAC,IAAI,EAAI;AACZA,QAAAA,IAAI,CAACC,IAAL;AACD,OAZH,EAaGF,IAbH,CAaQ,UAAAX,IAAI,EAAI;AACZ,cAAKc,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OAfH;AAgBD,K;;;;;;;6BAEQ;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKnB,YAAL,CAAkBoB,IAAlB,CAAuB,IAAvB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,QAAQ,EAAE,KAAK5B,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAU,QAAA,IAAI,EAAC,SAAf;AAAyB,QAAA,EAAE,EAAC,EAA5B;AAA+B,QAAA,IAAI,EAAC,IAApC;AAAyC,QAAA,IAAI,EAAC,IAA9C;AAAmD,QAAA,QAAQ,EAAE,KAAKA,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAaD;;;;EAnDmBL,S;;AAsDtB,eAAeC,OAAf","sourcesContent":["import React, { Component }               from 'react'\n\nclass NewPost extends Component {\n\n  state = {\n    title: '',\n    content: ''\n  }\n\n  handleChange = e => {\n    let newValue = e.target.value;\n    let key = e.target.name;\n    this.setState({\n      [key]: newValue\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {post: this.state};\n    let token = document.querySelector('meta[name=\"csrf-token\"]').content;\n    fetch('api/v1/posts', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'X-Requested-With': 'XMLHttpRequest',\n        'X-CSRF-Token': token\n      },\n      redirect: \"error\",\n      body: JSON.stringify(this.state)\n    })\n      .then(resp => {\n        resp.json()\n      })\n      .then(post => {\n        this.props.history.push('/');\n      });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit.bind(this)}>\n        <p>\n          <label htmlFor=\"title\">Title: </label>\n          <input type=\"text\" name=\"title\" onChange={this.handleChange} />\n        </p>\n        <p>\n          <label htmlFor=\"content\">Content: </label>\n          <textarea name=\"content\" id=\"\" cols=\"30\" rows=\"10\" onChange={this.handleChange}></textarea>\n        </p>\n        <input type=\"submit\" value=\"Create Post\" />\n      </form>\n    )\n  }\n}\n\nexport default NewPost"]},"metadata":{},"sourceType":"module"}